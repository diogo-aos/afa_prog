% Options for packages loaded elsewhere
\PassOptionsToPackage{unicode}{hyperref}
\PassOptionsToPackage{hyphens}{url}
%
\documentclass[
  ignorenonframetext,
]{beamer}
\usepackage{pgfpages}
\setbeamertemplate{caption}[numbered]
\setbeamertemplate{caption label separator}{: }
\setbeamercolor{caption name}{fg=normal text.fg}
\beamertemplatenavigationsymbolsempty
% Prevent slide breaks in the middle of a paragraph
\widowpenalties 1 10000
\raggedbottom
\setbeamertemplate{part page}{
  \centering
  \begin{beamercolorbox}[sep=16pt,center]{part title}
    \usebeamerfont{part title}\insertpart\par
  \end{beamercolorbox}
}
\setbeamertemplate{section page}{
  \centering
  \begin{beamercolorbox}[sep=12pt,center]{part title}
    \usebeamerfont{section title}\insertsection\par
  \end{beamercolorbox}
}
\setbeamertemplate{subsection page}{
  \centering
  \begin{beamercolorbox}[sep=8pt,center]{part title}
    \usebeamerfont{subsection title}\insertsubsection\par
  \end{beamercolorbox}
}
\AtBeginPart{
  \frame{\partpage}
}
\AtBeginSection{
  \ifbibliography
  \else
    \frame{\sectionpage}
  \fi
}
\AtBeginSubsection{
  \frame{\subsectionpage}
}

\usepackage{amsmath,amssymb}
\usepackage{iftex}
\ifPDFTeX
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
  \usepackage{unicode-math}
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
\fi
\usepackage{lmodern}
\ifPDFTeX\else  
    % xetex/luatex font selection
\fi
% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
\makeatletter
\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}
\makeatother
\usepackage{xcolor}
\newif\ifbibliography
\setlength{\emergencystretch}{3em} % prevent overfull lines
\setcounter{secnumdepth}{-\maxdimen} % remove section numbering

\usepackage{color}
\usepackage{fancyvrb}
\newcommand{\VerbBar}{|}
\newcommand{\VERB}{\Verb[commandchars=\\\{\}]}
\DefineVerbatimEnvironment{Highlighting}{Verbatim}{commandchars=\\\{\}}
% Add ',fontsize=\small' for more characters per line
\usepackage{framed}
\definecolor{shadecolor}{RGB}{241,243,245}
\newenvironment{Shaded}{\begin{snugshade}}{\end{snugshade}}
\newcommand{\AlertTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\AnnotationTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{#1}}
\newcommand{\AttributeTok}[1]{\textcolor[rgb]{0.40,0.45,0.13}{#1}}
\newcommand{\BaseNTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\BuiltInTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\CharTok}[1]{\textcolor[rgb]{0.13,0.47,0.30}{#1}}
\newcommand{\CommentTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{#1}}
\newcommand{\CommentVarTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{\textit{#1}}}
\newcommand{\ConstantTok}[1]{\textcolor[rgb]{0.56,0.35,0.01}{#1}}
\newcommand{\ControlFlowTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\DataTypeTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\DecValTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\DocumentationTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{\textit{#1}}}
\newcommand{\ErrorTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\ExtensionTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\FloatTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\FunctionTok}[1]{\textcolor[rgb]{0.28,0.35,0.67}{#1}}
\newcommand{\ImportTok}[1]{\textcolor[rgb]{0.00,0.46,0.62}{#1}}
\newcommand{\InformationTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{#1}}
\newcommand{\KeywordTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\NormalTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\OperatorTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{#1}}
\newcommand{\OtherTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\PreprocessorTok}[1]{\textcolor[rgb]{0.68,0.00,0.00}{#1}}
\newcommand{\RegionMarkerTok}[1]{\textcolor[rgb]{0.00,0.23,0.31}{#1}}
\newcommand{\SpecialCharTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{#1}}
\newcommand{\SpecialStringTok}[1]{\textcolor[rgb]{0.13,0.47,0.30}{#1}}
\newcommand{\StringTok}[1]{\textcolor[rgb]{0.13,0.47,0.30}{#1}}
\newcommand{\VariableTok}[1]{\textcolor[rgb]{0.07,0.07,0.07}{#1}}
\newcommand{\VerbatimStringTok}[1]{\textcolor[rgb]{0.13,0.47,0.30}{#1}}
\newcommand{\WarningTok}[1]{\textcolor[rgb]{0.37,0.37,0.37}{\textit{#1}}}

\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}\usepackage{longtable,booktabs,array}
\usepackage{calc} % for calculating minipage widths
\usepackage{caption}
% Make caption package work with longtable
\makeatletter
\def\fnum@table{\tablename~\thetable}
\makeatother
\usepackage{graphicx}
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
\makeatother
% Scale images if necessary, so that they will not overflow the page
% margins by default, and it is still possible to overwrite the defaults
% using explicit options in \includegraphics[width, height, ...]{}
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
% Set default figure placement to htbp
\makeatletter
\def\fps@figure{htbp}
\makeatother

\makeatletter
\makeatother
\makeatletter
\makeatother
\makeatletter
\@ifpackageloaded{caption}{}{\usepackage{caption}}
\AtBeginDocument{%
\ifdefined\contentsname
  \renewcommand*\contentsname{Table of contents}
\else
  \newcommand\contentsname{Table of contents}
\fi
\ifdefined\listfigurename
  \renewcommand*\listfigurename{List of Figures}
\else
  \newcommand\listfigurename{List of Figures}
\fi
\ifdefined\listtablename
  \renewcommand*\listtablename{List of Tables}
\else
  \newcommand\listtablename{List of Tables}
\fi
\ifdefined\figurename
  \renewcommand*\figurename{Figure}
\else
  \newcommand\figurename{Figure}
\fi
\ifdefined\tablename
  \renewcommand*\tablename{Table}
\else
  \newcommand\tablename{Table}
\fi
}
\@ifpackageloaded{float}{}{\usepackage{float}}
\floatstyle{ruled}
\@ifundefined{c@chapter}{\newfloat{codelisting}{h}{lop}}{\newfloat{codelisting}{h}{lop}[chapter]}
\floatname{codelisting}{Listing}
\newcommand*\listoflistings{\listof{codelisting}{List of Listings}}
\makeatother
\makeatletter
\@ifpackageloaded{caption}{}{\usepackage{caption}}
\@ifpackageloaded{subcaption}{}{\usepackage{subcaption}}
\makeatother
\makeatletter
\@ifpackageloaded{tcolorbox}{}{\usepackage[skins,breakable]{tcolorbox}}
\makeatother
\makeatletter
\@ifundefined{shadecolor}{\definecolor{shadecolor}{rgb}{.97, .97, .97}}
\makeatother
\makeatletter
\makeatother
\makeatletter
\makeatother
\ifLuaTeX
  \usepackage{selnolig}  % disable illegal ligatures
\fi
\IfFileExists{bookmark.sty}{\usepackage{bookmark}}{\usepackage{hyperref}}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\urlstyle{same} % disable monospaced font for URLs
\hypersetup{
  hidelinks,
  pdfcreator={LaTeX via pandoc}}

\author{}
\date{}

\begin{document}
\ifdefined\Shaded\renewenvironment{Shaded}{\begin{tcolorbox}[enhanced, breakable, borderline west={3pt}{0pt}{shadecolor}, sharp corners, boxrule=0pt, frame hidden, interior hidden]}{\end{tcolorbox}}\fi

\renewcommand*\contentsname{Table of contents}
\begin{frame}[allowframebreaks]
  \frametitle{Table of contents}
  \tableofcontents[hideallsubsections]
\end{frame}
\begin{frame}
\end{frame}

\hypertarget{expressuxf5es}{%
\subsection{Expressões}\label{expressuxf5es}}

\begin{frame}{Diogo Silva}
\protect\hypertarget{diogo-silva}{}
\begin{block}{CAP / ENGEL}
\protect\hypertarget{cap-engel}{}
dasilva@academiafa.edu.pt
\end{block}
\end{frame}

\begin{frame}[fragile]{O que são?}
\protect\hypertarget{o-que-suxe3o}{}
Expressões devolvem sempre um valor concreto com um determinado tipo.

\begin{Shaded}
\begin{Highlighting}[]
    \DataTypeTok{int}\NormalTok{ raio }\OperatorTok{=} \DecValTok{2}\OperatorTok{;}
    \DataTypeTok{float}\NormalTok{ area }\OperatorTok{=} \FloatTok{3.14} \OperatorTok{*}\NormalTok{ raio }\OperatorTok{*}\NormalTok{ raio}\OperatorTok{;}
\end{Highlighting}
\end{Shaded}
\end{frame}

\begin{frame}[fragile]{Operações aritméticas}
\protect\hypertarget{operauxe7uxf5es-aritmuxe9ticas}{}
\begin{Shaded}
\begin{Highlighting}[]
\DecValTok{1}\OperatorTok{+}\DecValTok{2}    \CommentTok{// soma}
\FloatTok{3.14}\OperatorTok{{-}}\DecValTok{2} \CommentTok{// subtração}
\DecValTok{1}\OperatorTok{*}\FloatTok{2.3}  \CommentTok{// multiplicação}
\DecValTok{5}\OperatorTok{/}\DecValTok{2}    \CommentTok{// divisão, devolve 2 {-}\textgreater{} porquê?}
\DecValTok{5}\OperatorTok{\%}\DecValTok{2}    \CommentTok{// resto da divisão}

\DataTypeTok{int}\NormalTok{ v }\OperatorTok{=} \DecValTok{2}\OperatorTok{;}
\OperatorTok{{-}}\NormalTok{v     }\CommentTok{// torna valor negativo, operação unária}
\end{Highlighting}
\end{Shaded}

--

Operação unária? Operação que recebe apenas 1 operando.

Por outro lado, as outras operações são binárias (2 operandos).

--

⚠️ Cuidado com a divisão! ⚠️

O operador para a divisão, quando recebe 2 operandos inteiros, devolve
sempre um valor inteiro (ignorando, sem arredondamento, a parte decimal)

\begin{Shaded}
\begin{Highlighting}[]
\DecValTok{5}\OperatorTok{/}\DecValTok{2} \CommentTok{// devolve 2}
\end{Highlighting}
\end{Shaded}

Quando misturamos um inteiro com um real, o inteiro é automaticamente
convertido e o resultado será o valor preciso

\begin{Shaded}
\begin{Highlighting}[]
\FloatTok{5.0}\OperatorTok{/}\DecValTok{2} \CommentTok{// devolve 2.5}
\end{Highlighting}
\end{Shaded}

--

O resto da divisão \texttt{\%} requer 2 operandos inteiros.

Usar 0 como o segundo operando da divisão \texttt{/} ou resto da divisão
\texttt{\%}, i.e.~divisão por 0, gera comportamento não definido.
\end{frame}

\begin{frame}[fragile]{Precedência e associatividade}
\protect\hypertarget{preceduxeancia-e-associatividade}{}
\texttt{1+2*-2}

É o tipo de expressão que não devem escrever. Devem usar () para
melhorar legibilidade.

Mas se vissem esta expressão, qual seria o resultado?

--

As operações no C têm uma precedência.

\begin{longtable}[]{@{}ll@{}}
\toprule\noalign{}
Precedência & Operadores \\
\midrule\noalign{}
\endhead
Alta & + - unários (e.g.~-2) \\
\texttt{-\/-\/-} & * / \% \\
Baixa & + - \\
\bottomrule\noalign{}
\end{longtable}

\texttt{1\ +\ 2\ *\ -2\ ==\ 1\ +\ (2\ *\ (-2))}

--

\texttt{i\ +\ j\ *\ k\ ==\ i\ +\ (j\ *\ k)}

\texttt{-i\ *\ -j\ ==\ (-i)\ *\ (-j)}

--

E quando uma expressão tem 2 operações com a mesma precedência?

\texttt{i\ -\ j\ +\ k}

\texttt{i\ /\ j\ *\ k}

--

Tem-se em conta a associatividade.

\texttt{i\ -\ j\ +\ k\ ==\ (i\ -\ j)\ +\ k}

\texttt{i\ /\ j\ *\ k\ ==\ (i\ /\ j)\ *\ k}

\texttt{+\ -\ *\ /\ \%} têm associtividade à esquerda, o que quer dizer
que agrupam o que está antes do operador.

Os operadores unários têm associatividade à direita.

\texttt{-\ -2\ ==\ -\ (-2)}
\end{frame}

\begin{frame}[fragile]{Operadores de atribuição}
\protect\hypertarget{operadores-de-atribuiuxe7uxe3o}{}
Já conhecemos o operador de atribuição simples \texttt{=}.

É o que designamos por uma operação com \textbf{efeitos secundários},
porque altera o estado dos operandos.

--

\texttt{a\ =\ 2} altera o estado da variável \texttt{a} porque o seu
valor é agora 2.

Adicionalmente, \texttt{a\ =\ 2} é uma expressão válida que devolve o
valor que foi atribuido à variável

\begin{Shaded}
\begin{Highlighting}[]
\DataTypeTok{int}\NormalTok{ a}\OperatorTok{=}\DecValTok{10}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"a=}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ a}\OperatorTok{=}\DecValTok{2}\OperatorTok{);} \CommentTok{// escreve 2 na consola e altera o valor de a}
\end{Highlighting}
\end{Shaded}

--

Todas as operações de atribuição exigem que o operando da esquerda seja
uma variável.

--

Existem outros que se combinam com operações aritméticas.

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 2\tabcolsep) * \real{0.5000}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 2\tabcolsep) * \real{0.5000}}@{}}
\toprule\noalign{}
\begin{minipage}[b]{\linewidth}\raggedright
Expressão
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
Descrição
\end{minipage} \\
\midrule\noalign{}
\endhead
var+=3 & soma 3 ao valor de var e atribui o resultado a var \\
var-=3 & subtrai 3 ao valor de var e atribui o resultado a var \\
var/=3 & multiplica 3 com o valor de var e atribui o resultado a var \\
var/=3 & divide o valor de var por 3 e atribui o resultado a var \\
var\%=3 & faz o resto da divisão entre var e 3 e atribui o resultado a
var \\
\bottomrule\noalign{}
\end{longtable}

--

\texttt{v*=3} não é equivalente a \texttt{v\ =\ v\ *\ 3}, embora na
maior parte das utilizações o resultado seja o mesmo.

Porquê? Observem a expressão \texttt{v*=3+10}

Não é equivalente a \texttt{v\ =\ v\ *\ 3\ +\ 10}. Esta expressão,
deviso às regras de precedência a associatividade iria dar um resultado
diferente.

\begin{Shaded}
\begin{Highlighting}[]
\DataTypeTok{int}\NormalTok{ a}\OperatorTok{=}\DecValTok{3}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"a=}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,} \OperatorTok{(}\NormalTok{a }\OperatorTok{=}\NormalTok{ a }\OperatorTok{*} \DecValTok{3} \OperatorTok{+} \DecValTok{10}\OperatorTok{));} \CommentTok{// a=19}
\NormalTok{a}\OperatorTok{=}\DecValTok{3}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"a=}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ a}\OperatorTok{*=}\DecValTok{3}\OperatorTok{+}\DecValTok{10}\OperatorTok{);} \CommentTok{// a=39}
\end{Highlighting}
\end{Shaded}

--

Não confundir \texttt{+=} com \texttt{=+}.

A primeira operação acumula o valor à direita.

A segunda atribui o valor que a variável já tem.

--

Posto isto, usem \textbf{sempre} ( ) para deixar claro qual é a ordem
das operações.
\end{frame}

\begin{frame}[fragile]{Incremento e decremento}
\protect\hypertarget{incremento-e-decremento}{}
Existe uma instrução que é frequentemente usada no C (irão perceber
porquê quando abordarmos ciclos):

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{i }\OperatorTok{=}\NormalTok{ i }\OperatorTok{+} \DecValTok{1}\OperatorTok{;}
\NormalTok{i }\OperatorTok{+=} \DecValTok{1}\OperatorTok{;}
\end{Highlighting}
\end{Shaded}

--

Existe outra forma de escrever esta instrução, com o operador de
incremento \texttt{++}

\begin{Shaded}
\begin{Highlighting}[]
\NormalTok{i = i + 1;}
\NormalTok{i += 1;}
\NormalTok{i++;}
\end{Highlighting}
\end{Shaded}

--

Este operador pode ser usado tanto antes de uma variável
(pré-incremento) como depois (pós-incremneto).

Qual será a diferença?

\begin{Shaded}
\begin{Highlighting}[]
\DataTypeTok{int}\NormalTok{ i}\OperatorTok{=}\DecValTok{10}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,} \OperatorTok{++}\NormalTok{i}\OperatorTok{);} \CommentTok{// ?}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ i}\OperatorTok{);}   \CommentTok{// ?}
\NormalTok{i}\OperatorTok{=}\DecValTok{10}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ i}\OperatorTok{++);} \CommentTok{// ?}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ i}\OperatorTok{);}   \CommentTok{// ?}
\end{Highlighting}
\end{Shaded}

--

\begin{Shaded}
\begin{Highlighting}[]
\DataTypeTok{int}\NormalTok{ i}\OperatorTok{=}\DecValTok{10}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,} \OperatorTok{++}\NormalTok{i}\OperatorTok{);} \CommentTok{// 11}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ i}\OperatorTok{);}   \CommentTok{// 11}
\NormalTok{i}\OperatorTok{=}\DecValTok{10}\OperatorTok{;}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ i}\OperatorTok{++);} \CommentTok{// 10}
\NormalTok{printf}\OperatorTok{(}\StringTok{"}\SpecialCharTok{\%d\textbackslash{}n}\StringTok{"}\OperatorTok{,}\NormalTok{ i}\OperatorTok{);}   \CommentTok{// 11}
\end{Highlighting}
\end{Shaded}

--

Além do incremento \texttt{++}, também temos disponível o decremento
\texttt{-\/-}, que funciona da mesma forma, mas subtrai em uma unidade.
\end{frame}

\begin{frame}[fragile]{Avaliação de expressões}
\protect\hypertarget{avaliauxe7uxe3o-de-expressuxf5es}{}
Resumo das operações que já vimos:

\includegraphics{img/4_expressions/precedence_table.png}

postfix == pós-incremento

prefix == pré-incremento

--

Com este conhecimento conseguimos avaliar expressões complicadas.

\texttt{a=\ b\ +=\ c++\ -\ d\ +\ -\/-e\ /\ -f}

\begin{enumerate}
\tightlist
\item
  Encontrar o operador com maior precedência.
\item
  Colocar ( ) à volta do operador e operandos.

  \begin{enumerate}
  \tightlist
  \item
    Aplicar regras de precedência e associatividade.
  \end{enumerate}
\item
  Repetir.
\end{enumerate}

--

\texttt{a=\ b\ +=\ c++\ -\ d\ +\ -\/-e\ /\ -f}

c++ e depois --e (precedência)

\texttt{a=\ b\ +=\ (c++)\ -\ d\ +\ (-\/-e)\ /\ -f}

operador unário -f (precedência)

\texttt{a=\ b\ +=\ (c++)\ -\ d\ +\ (-\/-e)\ /\ (-f)}

divisão (precedência)

\texttt{a=\ b\ +=\ (c++)\ -\ d\ +\ ((-\/-e)\ /\ (-f))}

--

\texttt{a=\ b\ +=\ (c++)\ -\ d\ +\ ((-\/-e)\ /\ (-f))}

- e + com a mesma precedência e com operando em comum d (precedência)

agrupam da esquerda para a direita, logo - primeiro (associatividade)

\texttt{a=\ b\ +=\ ((c++)\ -\ d)\ +\ ((-\/-e)\ /\ (-f))}

e depois o + (precedência)

\texttt{a=\ b\ +=\ (((c++)\ -\ d)\ +\ ((-\/-e)\ /\ (-f)))}

= e += com mesma precedência (precedência)

agrupam da direita para a esquerda, logo += primeiro (associatividade)

\texttt{a=\ (b\ +=\ (((c++)\ -\ d)\ +\ ((-\/-e)\ /\ (-f))))}

sobra apenas o = (precedência)

\texttt{(a=\ (b\ +=\ (((c++)\ -\ d)\ +\ ((-\/-e)\ /\ (-f)))))}
\end{frame}



\end{document}
