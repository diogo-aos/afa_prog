---
title: "Programação"
subtitle: "Laboratório 3 - versão 2"
institute: "Academia da Força Aérea"
author: CAP Diogo Silva
date: 2023-06-12
format: 
  html:
    toc: true
    toc-depth: 3
    code-fold: true
    html-math-method: katex
    embed-resources: true
---

# Laboratório 3 - Relatórios por zona

## Notas
- Apenas é permitido o uso do computador para
  - aceder ao replit.com (para resolução do laboratório)
  - aceder ao conteúdo das aulas e exercícios passados
  - aceder aos livros da bibliografia
- A resolução dos laboratório é individual.
- No final, submeter a solução no Replit.

## Setup

- Para a resolução deste laboratório considera a seguinte struct de um Carro:
  ```c
  typedef struct {
    char marca[50];
    int ano;
    float km;
  } Carro;
  ```
- Copia a definição deste tipo para a tua solução.
- No Replit, cria um ficheiro de texto chamado `carros.txt` com o seguinte conteúdo:
  ```text
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  BMW 2018 30000.0
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  BMW 2018 30000.0
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  BMW 2018 30000.0
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  BMW 2018 30000.0
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  BMW 2018 30000.0
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  BMW 2018 30000.0
  Fiat 2010 10000.0
  Mercedes 2015 20000.0
  ```


## Parte 1 - Importar de ficheiro de texto [35%]
- Escreve uma função que recebe o nome de um ficheiro de texto, um vetor de `Carro` chamado `carros` e número máximo de `Carro` a ler do ficheiro.
- A função lê os dados do ficheiro de texto e guarda-os no vetor `carros`.
- A função devolve o número de carros (`int`) lidos (que pode ser menor, mas nunca superior, ao número máximo de carros a ler).

## Parte 2 - Filtro por marca [35%]
- Escreve uma função que recebe:
  - um vetor de `Carro`
  - número de elementos do vetor que está preenchido (usar vetor de tamanho variável nos argumentos).
  - uma string com o nome de uma marca
- A função cria um ficheiro binário com o nome da marca recebida, terminado por ".bin", e.g. "BMW.bin".
  - Podes usar a função `strcat` da biblioteca `string.h` para concatenar 2 strings, e.g.
  ```c
  #include <stdio.h>
  #include <string.h>

  int main() {
    char str1[100] = "Hello ";
    char str2[100] = "world!";
    char result[100];

    strcpy(result, str1);
    strcat(result, str2);  // tem a str1 seguida da str2

    printf("%s", result);
    return 0;
  }
  ```
- A função escreve no ficheiro binários os dados de todos os carros que da marca recebida.
- A função devolve o número de carros (`int`) guardados no ficheiro.


## Parte 3 - Integração [30%]
- Escreve a função main que cria um vetor de 200 `Carro`.
- Adiciona à função main o seguinte vetor de marcas.
  ```c
  char marcas[2][50] = {
    "BMW",
    "Fiat",
  };
  ```
- O programa usa a função da parte 1 para ler os dados dos carros contidos no ficheiro `carros.txt`  e guardá-los no vetor criado. O número máximo de carros a ler é o tamanho do vetor.
- Para cada marca no vetor `marcas`, o programa cria um ficheiro binário com os carros que têm essa marca com a função da parte 2. Nota que tens de passar o número de elementos que efetivamente existem no vetor (que pode ser diferente do tamanho total do vetor).
